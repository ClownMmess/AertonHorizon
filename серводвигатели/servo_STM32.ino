#include<Servo.h>                                                          //подключение библиотеки для работы с сервомотором
#include<LiquidCrystal.h>                                               // подключение библиотеки для работы с ЖК дисплеем
const int rs = PB0, en = PB1, d4 = PB10 , d5 = PB11 , d6 = PC13, d7 = PC14;   //укажем контакты, к которым подключен ЖК дисплей
LiquidCrystal lcd(rs,en,d4,d5,d6,d7);                               //создадим объект для работы с ЖК дисплеем
int servoPin = PA0;                                //контакт, с которого мы будем управлять сервомотором 
int potPin = PA3;                                  //контакт, к которому подключен потенциометр 
Servo servo;                                       // создаем объект для управления сервомотором
void setup()                            
{ 
  lcd.begin(16,2);                         //указываем тип ЖК дисплея 16x2
  lcd.setCursor(0,0);                      //устанавливаем курсор в 1-й столбец 1-й строки
  lcd.print("CIRCUIT DIGEST");             //puts CIRCUIT DIGEST in LCD
  lcd.setCursor(0,1);                      // устанавливаем курсор в 1-й столбец 2-й строки
  lcd.print("SERVO WITH STM32");           //puts SERVO WITH STM32 in LCD
  delay(3000);                             // задержка 3 секунды
  lcd.clear();                             // очищаем экран дисплея
  servo.attach(servoPin);   // присоединяем объект сервомотора к заданному контакту
  
}
void loop()
{
 lcd.clear();                                                                 // очищаем экран дисплея
 int angle;                                                                   // переменная для хранения угла поворота сервомотора
 int reading;                                                                 //переменная для хранения значения с выхода АЦП
 reading = analogRead(potPin);                                                // считываем значение с выхода АЦП на контакте PA3
 angle = (reading/24);                                                        // делим значение с выхода АЦП на 24 чтобы получить максимальный угол поворота 170 градусов
 servo.write(angle);                                                          // вращаем ось сервомотора на угол angle
 lcd.setCursor(0,0);                                                          // устанавливаем курсор в 1-й столбец 1-й строки
 lcd.print("ANGLE:");                                                         //выводим слово ANGLE на ЖК дисплей
 lcd.print(angle);                                                            //выводим значение угла на ЖК дисплей
 delay(100);                                                                  //задержка 100 мс
}